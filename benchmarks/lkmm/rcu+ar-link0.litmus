C C-3.LB+pooncereleases
"PodRWOnceRelease RfeReleaseOnce PodRWOnceRelease RfeReleaseOnce PodRWOnceRelease RfeReleaseOnce"
Cycle=PodRWOnceRelease RfeReleaseOnce PodRWOnceRelease RfeReleaseOnce PodRWOnceRelease RfeReleaseOnce
Relax=RfeReleaseOnce
Safe=PodRWOnceRelease
Prefetch=0:x=F,0:y=W,1:y=F,1:z=W,2:z=F,2:x=W
Com=Rf Rf Rf
Orig=PodRWOnceRelease RfeReleaseOnce PodRWOnceRelease RfeReleaseOnce PodRWOnceRelease RfeReleaseOnce
{
}

P0(int *x, int *y)
{
	rcu_read_lock();
	WRITE_ONCE(*x, 1);
	r_y = READ_ONCE(*y);
	rcu_read_unlock();
}

P1(int *x, int *s)
{
	if (READ_ONCE(*x) == 1)
		WRITE_ONCE(*s, 1);
}

P2(int *s, int *w, int *z)
{
	r_s = READ_ONCE(*s);
	smp_store_release(w, 1);
	/* smp_mb(); */
	int r = READ_ONCE(*z);
	WRITE_ONCE(*a, r + 1);
}

P3(int *a, int *b)
{
	r_a = READ_ONCE(*a);
	WRITE_ONCE(*b, r_a);
}

P4(int *b, int *c)
{
	r_b = READ_ONCE(*b);
	smp_store_release(c, 1);
}

P5(int *c, int *y)
{
	r_c = READ_ONCE(*c);
	synchronize_rcu();
	WRITE_ONCE(*y, 1);
}

exists
(0:r_y == 1 /\ 2:r_s == 1 /\ 3:r_a == 1 /\ 4:r_b == 1 /\ 5:r_c == 1)